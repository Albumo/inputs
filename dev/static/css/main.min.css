/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  position: relative;
  vertical-align: baseline;
  font-size: 75%;
  line-height: 0; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Remove margin
 */
figure {
  margin: 0; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  height: 0;
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  -moz-box-sizing: content-box; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  margin: 0;
  /* 1 */
  font: inherit;
  /* 2 */
  color: inherit;
  /* 3 */ }

fieldset {
  vertical-align: baseline;
  margin: 0;
  padding: 0;
  background: transparent;
  border: 0;
  font-size: 100%;
  outline: 0; }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  cursor: pointer;
  /* 2 */
  -webkit-appearance: button;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  padding: 0;
  border: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  padding: 0;
  /* 1 */
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  box-sizing: content-box;
  /* 1 */
  -webkit-box-sizing: content-box;
  -moz-box-sizing: content-box;
  /* 2 */
  -webkit-appearance: textfield; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  padding: 0;
  /* 1 */
  border: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/* Blockquote
   ========================================================================== */
blockquote {
  margin: 0; }

.select__custom-select {
  margin: 0;
  padding: 0;
  list-style: none; }

*,
*:before,
*:after {
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }

html,
body {
  height: 100%;
  min-width: 320px; }

ul {
  list-style: disc; }

label {
  cursor: pointer; }

body {
  font-family: "Rubik", sans-serif;
  line-height: 1.3; }

@media only screen and (max-width: 1023px) {
  * {
    outline: none; } }

body {
  background-color: #fff;
  font-weight: 400;
  color: #313131; }

html {
  height: 100%;
  font-size: 18px; }
  @media only screen and (max-width: 768px) {
    html {
      font-size: 20px; } }

.w-center {
  width: 100%;
  max-width: 1370px;
  margin-right: auto;
  margin-left: auto;
  padding: 0 15px; }
  @media only screen and (min-width: 769px) and (max-width: 1023px) {
    .w-center {
      padding: 0 45px; } }
  @media only screen and (min-width: 1024px) and (max-width: 1624px) {
    .w-center {
      padding: 0 50px; } }

.wrapper {
  height: 100vh;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap; }

.header {
  position: relative;
  width: 100%;
  z-index: 99;
  background: #fff;
  border: 1px solid #EDF2F5;
  color: #313131;
  -webkit-transition: all .35s ease-in-out;
  transition: all .35s ease-in-out; }

.select__custom-select {
  background: #46465A;
  color: #fff;
  text-align: left;
  border-radius: 5px;
  cursor: pointer;
  padding: 10px;
  width: 280px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative; }
  .select__custom-select:before {
    content: '';
    width: 0;
    height: 0;
    border-left: 0.5em solid transparent;
    border-right: 0.5em solid transparent;
    border-top: 0.8em solid #fff;
    position: absolute;
    right: 1em;
    -webkit-transition: all ease 0.25s;
    transition: all ease 0.25s; }

.select__options {
  display: block;
  list-style-type: none;
  padding: 0;
  margin: 12px 0 0 0;
  background: transparent;
  position: absolute;
  width: 100%;
  max-height: 0;
  overflow: hidden;
  top: 1.2em;
  -webkit-transition: all ease 0.25s;
  transition: all ease 0.25s; }
  .select__options li {
    padding: 10px;
    border-bottom: 1px solid #fff; }
    .select__options li:hover {
      background: rgba(255, 255, 255, 0.2); }
    .select__options li:last-of-type {
      border-bottom: 0; }

.select__selected-option {
  position: relative;
  width: 100%; }

.select__options.open {
  background: #2F2F3F;
  max-height: 1000%; }

.select__custom-select.open {
  background: #2F2F3F;
  max-height: 1000%; }

/* arrow up */
.select__custom-select.open:before {
  border-left: 0.5em solid transparent;
  border-right: 0.5em solid transparent;
  border-bottom: 0.8em solid #fff;
  border-top: 0; }

.progress {
  position: relative;
  width: 280px;
  padding: 0 20px;
  background: #535050;
  height: 30px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 50px; }
  .progress__bar-wrap {
    height: 3px;
    width: 200px;
    border-radius: 20px;
    overflow: hidden; }
  .progress__bar {
    width: 0;
    height: 100%;
    background-color: #B6244F;
    background-size: 30px 30px;
    -webkit-box-shadow: 2px 0 10px inset rgba(0, 0, 0, 0.2);
    box-shadow: 2px 0 10px inset rgba(0, 0, 0, 0.2);
    -webkit-transition: width 2s ease-out;
    transition: width 2s ease-out; }
  .progress__perc {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    position: absolute;
    width: 60px;
    height: 60px;
    background: #535050;
    border-radius: 50%;
    top: calc(50% - 30px);
    right: 0px;
    color: #fff;
    font-weight: bold; }

.footer {
  background: #FFF;
  border-top: 5px solid #EDF2F5; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
